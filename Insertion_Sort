"""Insertion Sort Algorithm 

1. Useful for small datasets
2. Works well on nearly sorted data
3. Stable 
4. Time: O(n^2) Space: O(1) 
"""

arr = [3,4,5,1,4]

def insertion_sort(arr): 
  for i in range(1, len(arr)):
    key = arr[i] 
    j = i - 1 
    while j >= 0 and arr[j] > key: 
      arr[j+1] = arr[j] 
      j -= 1
    arr[j+1] = key 
  return arr
  
print(insertion_sort(arr))
